{"version":3,"sources":["components/imageCard.js","components/SearchBar.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","favorites","map","tag","index","key","SearchBar","searchText","useState","text","setText","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","App","images","setImages","Loading","setLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAkCeA,EAhCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACE,yBAAKC,UAAU,qDACb,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,WAAWH,UAAU,YAEvD,yBAAKA,UAAU,aACb,yBAAKA,UAAU,wCAAf,aACaH,EAAMO,MAGnB,4BACE,sCAAYP,EAAMQ,OAClB,yCAAeR,EAAMS,WACrB,sCAAYT,EAAMU,OAClB,0CAAgBV,EAAMW,aAG1B,yBAAKR,UAAU,aACZF,EAAKW,KAAI,SAACC,EAAKC,GAAN,OACR,yBACEC,IAAKD,EACLX,UAAU,oGAFZ,IAIIU,SCMCG,EA9BG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAQpC,OACE,yBAAKjB,UAAU,kDACb,0BAAMkB,SAPO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAKiBhB,UAAU,mBAClC,yBAAKA,UAAU,mCACb,2BACEA,UAAU,kEACVqB,KAAK,OACLC,SAAU,SAACH,GAAD,OAAOF,EAAQE,EAAEI,OAAOC,QAClCC,YAAY,qBAEd,4BACEzB,UAAU,wGACVqB,KAAK,UAFP,cCmBKK,MAnCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEiBb,oBAAS,GAF1B,mBAENc,EAFM,KAEGC,EAFH,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAkBb,OAbAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cAC4DJ,EAD5D,kCAGFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAW,MAEZW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACX,IAIF,yBAAK/B,UAAU,sBACb,wBAAIA,UAAU,kCAAd,wBACA,kBAAC,EAAD,CAAWc,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,MACxCa,EACC,4CAEA,yBAAK7B,UAAU,yBACZ2B,EAAOlB,KAAI,SAACZ,GAAD,OACV,kBAAC,EAAD,CAAWe,IAAKf,EAAMgD,GAAIhD,MAAOA,UCzB7CiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.76f8ad89.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ImageCard = ({ image }) => {\r\n  const tags = image.tags.split(\",\");\r\n  return (\r\n    <div className=\"max-w-sm rounded-lg overflow-hidden shadow-lg m-3\">\r\n      <img src={image.webformatURL} alt=\"unsplash\" className=\"w-full \"></img>\r\n\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-blue-500 text-xl mb-5\">\r\n          Photo By: {image.user}\r\n        </div>\r\n\r\n        <ul>\r\n          <li>Views: {image.views}</li>\r\n          <li>Download: {image.downloads}</li>\r\n          <li>Likes: {image.likes}</li>\r\n          <li>Favorites: {image.favorites}</li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-bold text-grey-700 mr-3 bg-pink-300\"\r\n          >\r\n            #{tag}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SearchBar = ({ searchText }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b py-2\">\r\n          <input\r\n            className=\"bg-grey w-full leading-tight focus:outline-none appearance-none\"\r\n            type=\"text\"\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Search images...\"\r\n          />\r\n          <button\r\n            className=\"flex-shrink-0 bg-indigo-200 hover:bg-blue-700 border-indigo-500 rounded text-sm  text-white py-1 px-2\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/imageCard\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_API}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n  // dependency meaning that whenever term change it will run again to fetch\n\n  return (\n    <div className=\"container mx-auto \">\n      <h2 className=\"text-center text-4xl font-bold\">React & Tailwind CSS</h2>\n      <SearchBar searchText={(text) => setTerm(text)} />\n      {Loading ? (\n        <h1> Loading ...</h1>\n      ) : (\n        <div className=\"grid grid-cols-3 gap4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}